generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// TTN is not completely capitalized since Prisma makes the first letter lowercase when generating the model
model TtnMapperDatapoint {
    id                   Int                @id
    timestamp            DateTime
    deviceGPSDatapoint   DeviceGPSDatapoint @relation(fields: [deviceGPSDatapointId], references: [id])
    deviceGPSDatapointId Int
    gateway              Gateway            @relation(fields: [gatewayId], references: [gatewayId])
    gatewayId            String
    rssi                 Int
    snr                  Float
}

model DeviceGPSDatapoint {
    id                  Int                  @id @default(autoincrement())
    timestamp           DateTime             @db.Timestamp(6) // 6 digits of precision for the fractional seconds
    device              Device               @relation(fields: [deviceId], references: [deviceId])
    deviceId            String
    latitude            Float
    longitude           Float
    altitude            Float
    hdop                Float
    ttnMapperDatapoints TtnMapperDatapoint[]

    @@unique([deviceId, timestamp])
}

model Device {
    deviceId            String               @id
    deviceGPSDatapoints DeviceGPSDatapoint[]
    deviceSubscription  DeviceSubscription?
    createdAt           DateTime             @default(now())
    updatedAt           DateTime             @updatedAt
}

model Gateway {
    gatewayId           String               @id
    latitude            Float
    longitude           Float
    altitude            Float
    ttnmapperDatapoints TtnMapperDatapoint[]
    createdAt           DateTime             @default(now())
    updatedAt           DateTime             @updatedAt
}

// add a model that represents subscriptions to Device IDs
model DeviceSubscription {
    deviceId  String   @id @unique
    device    Device   @relation(fields: [deviceId], references: [deviceId])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
