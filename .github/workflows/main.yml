---
name: Test everything

on:
    push:
    pull_request:

env:
    IMAGE_NAME: ttn-locator-backend

jobs:
    # audit:
    #     name: Audit packages
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v3
    #         - uses: pnpm/action-setup@v2
    #           with:
    #               version: 7
    #         - name: Audit packages
    #           run: pnpm audit --audit-level moderate
    #           env:
    #               CI: true
    analyze:
        name: Analyze
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write
        steps:
            - uses: actions/checkout@v3
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v2
              with:
                  languages: javascript
            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v2
    yamllint:
        runs-on: ubuntu-latest
        steps:
            - name: ‚§µÔ∏è Check out code from GitHub
              uses: actions/checkout@v3
            - name: üöÄ Run yamllint
              uses: frenck/action-yamllint@v1.4.0
    prisma-migrate-and-jest:
        runs-on: ubuntu-latest
        env:
            DATABASE_URL: postgresql://postgres:postgres@localhost:57010/ttn-locator-backend
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - uses: pnpm/action-setup@v2
              with:
                  version: 7

            - uses: isbang/compose-action@v1.4.1
              with:
                  compose-file: './docker-compose.yml'
                  down-flags: '--volumes'
                  services: |
                      db

            - name: pnpm install
              run: pnpm install --frozen-lockfile
            - name: pnpm build
              run: pnpm run build

            - name: Prisma seed
              run: npx prisma migrate reset --force

            - name: Run tests
              run: pnpm run jest:test
    eslint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - uses: pnpm/action-setup@v2
              with:
                  version: 7

            - run: pnpm install --frozen-lockfile
            - run: pnpm run build

            - name: Run eslint scan
              run: pnpm run eslint:scan
    build-artifact:
        runs-on: ubuntu-latest
        needs: [prisma-migrate-and-jest, eslint]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - uses: pnpm/action-setup@v2
              with:
                  version: 7

            - run: pnpm install --frozen-lockfile
            - run: pnpm run build

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: ttn-locator-backend
                  path: dist
    build-docker:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
        needs: [prisma-migrate-and-jest, eslint]
        steps:
            - uses: actions/checkout@v3

            - name: Build image
              run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

            - name: Log in to registry
              # This is where you will update the personal access token to GITHUB_TOKEN
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

            - name: Push image
              run: |
                  IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
                  # Change all uppercase to lowercase
                  IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
                  # Strip git ref prefix from version
                  VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
                  # Strip "v" prefix from tag name
                  [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
                  # Use Docker `latest` tag convention
                  [ "$VERSION" == "main" ] && VERSION=latest
                  echo IMAGE_ID=$IMAGE_ID
                  echo VERSION=$VERSION
                  docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
                  docker push $IMAGE_ID:$VERSION
